From 7dd052fb947a6949e18bbc826091a67814d44840 Mon Sep 17 00:00:00 2001
From: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date: Sat, 20 Apr 2019 12:50:25 +0200
Subject: [PATCH 30/75] lib/error-inject: annotate ei_seq_{start,stop}

This handles:

lib/error-inject.c:162:1: warning: mutex 'ei_mutex' is still held at the end of function [-Wthread-safety-analysis]
}
^
lib/error-inject.c:160:2: note: mutex acquired here
        mutex_lock(&ei_mutex);
        ^
lib/error-inject.c:166:2: warning: releasing mutex 'ei_mutex' that was not held [-Wthread-safety-analysis]
        mutex_unlock(&ei_mutex);
        ^
2 warnings generated.
---
 lib/error-inject.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/lib/error-inject.c b/lib/error-inject.c
index c0d4600f4896..7af83ffb1bd9 100644
--- a/lib/error-inject.c
+++ b/lib/error-inject.c
@@ -155,13 +155,13 @@ static __init int module_ei_init(void)
  * error_injection/whitelist -- shows which functions can be overridden for
  * error injection.
  */
-static void *ei_seq_start(struct seq_file *m, loff_t *pos)
+static void *ei_seq_start(struct seq_file *m, loff_t *pos) __attribute__((acquire_capability(ei_mutex)))
 {
 	mutex_lock(&ei_mutex);
 	return seq_list_start(&error_injection_list, *pos);
 }
 
-static void ei_seq_stop(struct seq_file *m, void *v)
+static void ei_seq_stop(struct seq_file *m, void *v) __attribute__((release_capability(ei_mutex)))
 {
 	mutex_unlock(&ei_mutex);
 }
-- 
2.17.1

