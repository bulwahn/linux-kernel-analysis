From aef33c643ffb1c0e0df8efc63ad347605ffef02b Mon Sep 17 00:00:00 2001
From: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date: Fri, 21 Jun 2019 08:26:00 +0200
Subject: [PATCH 120/171] tty: revert code change and silence

Previous code change in this file was just to show that analysis would
work if not for the aliasing issue.

Link: https://github.com/ClangBuiltLinux/thread-safety-analysis/issues/108
---
 drivers/tty/tty_buffer.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/tty/tty_buffer.c b/drivers/tty/tty_buffer.c
index 52e30ee38d64..0e8536a9f554 100644
--- a/drivers/tty/tty_buffer.c
+++ b/drivers/tty/tty_buffer.c
@@ -53,16 +53,16 @@
  *	flip buffer
  */
 
-void tty_buffer_lock_exclusive(struct tty_port *port) __acquires_mutex(port->buf.lock)
+void tty_buffer_lock_exclusive(struct tty_port *port) __acquires_mutex(port->buf.lock) __no_thread_safety_analysis
 {
 	struct tty_bufhead *buf = &port->buf;
 
 	atomic_inc(&buf->priority);
-	mutex_lock(&port->buf.lock);
+	mutex_lock(&buf->lock);
 }
 EXPORT_SYMBOL_GPL(tty_buffer_lock_exclusive);
 
-void tty_buffer_unlock_exclusive(struct tty_port *port) __releases_mutex(port->buf.lock)
+void tty_buffer_unlock_exclusive(struct tty_port *port) __releases_mutex(port->buf.lock) __no_thread_safety_analysis
 {
 	struct tty_bufhead *buf = &port->buf;
 	int restart;
@@ -70,7 +70,7 @@ void tty_buffer_unlock_exclusive(struct tty_port *port) __releases_mutex(port->b
 	restart = buf->head->commit != buf->head->read;
 
 	atomic_dec(&buf->priority);
-	mutex_unlock(&port->buf.lock);
+	mutex_unlock(&buf->lock);
 	if (restart)
 		queue_work(system_unbound_wq, &buf->work);
 }
-- 
2.17.1

