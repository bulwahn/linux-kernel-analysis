From 013fc270f128dbb4ddcf02055530c288eb5dc76a Mon Sep 17 00:00:00 2001
From: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date: Sat, 20 Apr 2019 12:53:49 +0200
Subject: [PATCH 022/171] include/linux/refcount.h: annotate
 refcount_dec_and_mutex_lock in header

Noticed due to those warnings:

net/sched/cls_api.c:1270:3: warning: releasing mutex 'block->lock' that was not held [-Wthread-safety-analysis]
                mutex_unlock(&block->lock);
                ^
1 warning generated.

net/sched/act_api.c:139:3: warning: releasing mutex 'idrinfo->lock' that was not held [-Wthread-safety-analysis]
                mutex_unlock(&idrinfo->lock);
                ^
1 warning generated.

This caused many new warnings to be taken care of in further commits.
---
 include/linux/refcount.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/include/linux/refcount.h b/include/linux/refcount.h
index e28cce21bad6..2b22029143fb 100644
--- a/include/linux/refcount.h
+++ b/include/linux/refcount.h
@@ -110,7 +110,7 @@ static inline void refcount_dec(refcount_t *r)
 
 extern __must_check bool refcount_dec_if_one(refcount_t *r);
 extern __must_check bool refcount_dec_not_one(refcount_t *r);
-extern __must_check bool refcount_dec_and_mutex_lock(refcount_t *r, struct mutex *lock);
+extern __must_check bool refcount_dec_and_mutex_lock(refcount_t *r, struct mutex *lock) __try_acquires_mutex(true, lock);
 extern __must_check bool refcount_dec_and_lock(refcount_t *r, spinlock_t *lock);
 extern __must_check bool refcount_dec_and_lock_irqsave(refcount_t *r,
 						       spinlock_t *lock,
-- 
2.17.1

